{"componentChunkName":"component---src-templates-blog-post-js","path":"/nginx/","result":{"data":{"site":{"siteMetadata":{"title":"Qin Blog"}},"markdownRemark":{"id":"c9893318-3eaa-576e-87fa-2ae0dc18d4db","excerpt":"NGINX is a free, open-source, high-performance HTTP server and reverse proxy, as well as an IMAP/POP3 proxy server. NGINX is known for its high performance…","html":"<p>NGINX is a free, open-source, high-performance HTTP server and reverse proxy, as well as an IMAP/POP3 proxy server. NGINX is known for its high performance, stability, rich feature set, simple configuration, and low resource consumption.</p>\n<h3>编译 Nginx</h3>\n<ol>\n<li>在 <a href=\"http://nginx.org/en/download.html\">Nginx Download</a> 选择合适的版本，拷贝下载链接并进行安装：</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">wget</span> http://nginx.org/download/nginx-1.18.0.tar.gz\n<span class=\"token function\">tar</span> -xzf nginx-1.18.0.tar.gz\n<span class=\"token builtin class-name\">cd</span> nginx-1.18.0\n<span class=\"token function\">cp</span> -r contrib/vim/* ~/.vim/</code></pre></div>\n<ol start=\"2\">\n<li>配置</li>\n</ol>\n<p>configure 是一些编译配置项，可以使用 <code class=\"language-text\">help</code> 命令查看有哪些配置选项。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">./configure --help ｜ <span class=\"token function\">more</span></code></pre></div>\n<p>configure 配置项大概分为三类</p>\n<ul>\n<li><code class=\"language-text\">--with-xxx-module</code> 表示原本没有的模块，需要主动添加到 nginx 中</li>\n<li><code class=\"language-text\">--without-xxx-module</code> 表示原本已有这个模块，需要移除</li>\n<li><code class=\"language-text\">--prefix</code>, <code class=\"language-text\">--with-cc</code> 等其他配置项</li>\n</ul>\n<p>编译前的检查和配置</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 编译 nginx 需要的前置依赖</span>\nyum -y <span class=\"token function\">install</span> gcc gcc-c++\nyum -y <span class=\"token function\">install</span> <span class=\"token function\">make</span>\nyum -y <span class=\"token function\">install</span> pcre-devel\nyum -y <span class=\"token function\">install</span> zlib-devel\n\n./configure --prefix<span class=\"token operator\">=</span>/home/nginx</code></pre></div>\n<p>完成配置之后，若没有报错，会生成 <code class=\"language-text\">objs</code> 中间文件夹。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> objs\n<span class=\"token function\">cat</span> ngx_modules.c <span class=\"token comment\"># 查看接下来编译时，有哪些模块会被编译进 nginx</span></code></pre></div>\n<ol start=\"3\">\n<li>开始编译</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">make</span>\n<span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre></div>\n<h3>开启 Nginx</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> /home/nginx/sbin\n./nginx</code></pre></div>\n<p>此时，Nginx 已经被成功开启，可以通过以下命令查看 Nginx 进程。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nginx</code></pre></div>\n<h3>重载 Nginx</h3>\n<p>修改配置文件内容。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> path/to/nginx\n<span class=\"token function\">vim</span> conf/nginx.conf</code></pre></div>\n<p>重载。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">./sbin/nginx -s reload</code></pre></div>\n<h3>升级 Nginx</h3>\n<p>把新编译出来的 nginx 二进制文件（sbin/nginx）替换调旧的进程正在使用的 nginx 二进制文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mv</span> /path/to/new/nginx ./.sbin/nginx</code></pre></div>\n<p>停用当前进程并启用新进程（平滑地升级）。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">kill</span> -USR2 <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">cat</span> path/to/nginx/logs/nginx.pid<span class=\"token variable\">`</span></span>\n<span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nginx</code></pre></div>\n<p>此时，可以看到新老 nginx 进程都在运行，但老 nginx 的 worker 进程已经不再监听 80 端口了。</p>\n<p>优雅地关闭老进程。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">kill</span> -WINCH <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">cat</span> path/to/nginx/logs/nginx.pid.oldbin<span class=\"token variable\">`</span></span>\n<span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nginx</code></pre></div>\n<p>此时，老的 worker 进程被关闭了，但 master 进程还在，为了方便做版本回退。</p>\n<blockquote>\n<p>如果使用 <code class=\"language-text\">kill -QUIT</code> 就可以把 master 进程关闭。</p>\n</blockquote>\n<h3>日志切割</h3>\n<p>通过重启 nginx 形成新日志来实现。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> path/to/nginx/logs\n<span class=\"token function\">mv</span> access.log access-bak.log\n<span class=\"token punctuation\">..</span>/sbin/nginx -s reopen</code></pre></div>\n<p>这三行命令可以使用 <code class=\"language-text\">crontab</code> 定时执行脚本来实现。</p>","frontmatter":{"title":"Nginx","date":"January 27, 2021","description":"Nginx 学习记录，常用配置和命令。"}},"previous":{"fields":{"slug":"/new-brginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":null},"pageContext":{"id":"c9893318-3eaa-576e-87fa-2ae0dc18d4db","previousPostId":"b49c3ccb-4ceb-5090-8d60-c64287a9cd90","nextPostId":null}},"staticQueryHashes":["2755755109","2841359383"]}